{"version":3,"file":"SiteSelection.stories-a61126bb.js","sources":["../../src/components/siteSelectionForm/components/MultiSelect.tsx","../../src/components/siteSelectionForm/components/Input.tsx","../../src/components/siteSelectionForm/components/DynamicForm.tsx","../../src/components/siteSelectionForm/components/FormPage.tsx","../../src/components/siteSelectionForm/SiteSelectionForm.tsx"],"sourcesContent":["interface MultiSelectProps {\n  options: ReadonlyArray<string>;\n  values?: Record<string, boolean>;\n  onChange: (values: Record<string, boolean>) => void;\n}\n\nconst MultiSelect = ({ options, values = {}, onChange }: MultiSelectProps) => {\n  if (!options.length) {\n    return null;\n  }\n\n  const handleChange = (key: string, value: boolean) => {\n    onChange({\n      ...values,\n      [key]: value,\n    });\n  };\n\n  const optionComponents = options.map((key) => (\n    <div key={key} className=\"flex items-center mb-4\">\n      <label className=\"font-semibold flex\">\n        <input\n          type=\"checkbox\"\n          class=\"checkbox mr-2\"\n          checked={values[key]}\n          onClick={() => handleChange(key, !values[key])}\n        />\n        <span>{key}</span>\n      </label>\n    </div>\n  ));\n\n  return <div>{optionComponents}</div>;\n};\n\nexport default MultiSelect;\n","interface InputProps<T> {\r\n  value: T;\r\n  type: string;\r\n  step?: string;\r\n  min?: string;\r\n  max?: string;\r\n  onChange: (value: T) => void;\r\n}\r\n\r\nconst Input = <T extends number | string>({\r\n  value,\r\n  type,\r\n  step,\r\n  min,\r\n  max,\r\n  onChange,\r\n}: InputProps<T>) => {\r\n  const InputBox = (\r\n    <div className=\"flex items-center mb-4\">\r\n      <label className=\"font-semibold flex\">\r\n        <input\r\n          type={type}\r\n          class=\"text mr-2\"\r\n          value={value}\r\n          onChange={(event) => onChange(event.currentTarget.value as T)}\r\n          step={step}\r\n          min={min}\r\n          max={max}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n\r\n  return <div>{InputBox}</div>;\r\n};\r\n\r\nexport default Input;\r\n","import { useMemo } from \"preact/hooks\";\nimport { FormPageSchema, FormValue } from \"../types\";\nimport MultiSelect from \"./MultiSelect\";\nimport { JSXInternal } from \"node_modules/preact/src/jsx\";\nimport Input from \"./Input\";\n\ninterface DynamicFormProps {\n  id: string;\n  formPageSchema: FormPageSchema;\n  value: FormValue;\n  onFormValueChange: (id: string, value: FormValue) => void;\n}\n\nenum InputType {\n  TextInput,\n  NumberInput,\n  MultiSelect,\n  None,\n}\n\nconst getInputType = (formPageSchema: FormPageSchema) => {\n  if (formPageSchema.type === \"string\") {\n    return formPageSchema.enum ? InputType.MultiSelect : InputType.TextInput;\n  }\n  if (formPageSchema.type === \"number\") {\n    return InputType.NumberInput;\n  }\n\n  return InputType.None;\n};\n\nconst DynamicForm = ({\n  id,\n  formPageSchema,\n  value,\n  onFormValueChange,\n}: DynamicFormProps) => {\n  let questionInputComponent: JSXInternal.Element | null = null;\n\n  const inputType = useMemo(\n    () => getInputType(formPageSchema),\n    [formPageSchema],\n  );\n\n  const handleFormValueChange = (newValue: FormValue) => {\n    onFormValueChange(id, newValue);\n  };\n\n  switch (inputType) {\n    case InputType.MultiSelect:\n      questionInputComponent = (\n        <MultiSelect\n          options={formPageSchema.enum as ReadonlyArray<string>}\n          values={value as Record<string, boolean>}\n          onChange={handleFormValueChange}\n        />\n      );\n      break;\n    case InputType.TextInput:\n      questionInputComponent = (\n        <Input\n          type={formPageSchema.type}\n          value={(value as string) ?? \"\"}\n          onChange={handleFormValueChange}\n        />\n      );\n\n      break;\n    case InputType.NumberInput:\n      questionInputComponent = (\n        <Input\n          type={formPageSchema.type}\n          value={(value as number) ?? 0}\n          step={formPageSchema.step}\n          min={formPageSchema.min}\n          max={formPageSchema.max}\n          onChange={handleFormValueChange}\n        />\n      );\n\n      break;\n  }\n\n  return <form>{questionInputComponent}</form>;\n};\n\nexport default DynamicForm;\n","import { ComponentChildren } from \"preact\";\n\ninterface FormPageProps {\n  children?: ComponentChildren;\n  title: string;\n  subtitle?: string;\n  onBackClicked: () => void;\n  onContinueClicked: () => void;\n}\n\nconst FormPage = ({\n  children,\n  title,\n  subtitle,\n  onBackClicked,\n  onContinueClicked,\n}: FormPageProps) => {\n  return (\n    <div>\n      <div className=\"form-page-header mb-4\">\n        <h1 className=\"my-2 text-4xl font-bold\">{title}</h1>\n        {subtitle && <p>{subtitle}</p>}\n      </div>\n      <div className=\"form-page-body mb-4\">{children}</div>\n      <div className=\"form-page-footer mt-10 flex space-x-6\">\n        <button\n          className=\"bg-gray-200 hover:bg-gray-300 text-black py-1 px-2\"\n          onClick={onBackClicked}\n        >\n          Back\n        </button>\n        <button\n          className=\"bg-green-700 hover:bg-green-800 text-white py-1 px-2\"\n          onClick={onContinueClicked}\n        >\n          Save and continue\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default FormPage;\n","import { useState, useEffect, useMemo } from \"preact/hooks\";\nimport { loadJson } from \"../../utils\";\nimport DynamicForm from \"./components/DynamicForm\";\nimport { FormState, FormValue, SiteSelectionFormSchema } from \"./types\";\n\nimport \"./SiteSelectionForm.css\";\nimport FormPage from \"./components/FormPage\";\n\ninterface SiteSelectionForm {\n  filepath?: string;\n  data?: SiteSelectionFormSchema;\n}\n\nconst SiteSelectionForm = ({ filepath, data }: SiteSelectionForm) => {\n  const [formSchema, setFormSchema] =\n    useState<SiteSelectionFormSchema | null>();\n\n  const [formData, setFormData] = useState<FormState>({});\n\n  const [currentPage, setCurrentPage] = useState(0);\n\n  useEffect(() => {\n    if (data) {\n      setFormSchema(data);\n    } else if (filepath) {\n      loadJson(filepath).then((data) => {\n        setFormSchema(data);\n      });\n    } else {\n      setFormSchema(null);\n    }\n  }, [setFormSchema, filepath, data]);\n\n  if (!formSchema) {\n    return null;\n  }\n\n  const propertyKeys = useMemo(\n    () => Object.keys(formSchema.properties),\n    [formSchema],\n  );\n\n  const currentPageId = useMemo(\n    () => propertyKeys[currentPage],\n    [propertyKeys, currentPage],\n  );\n\n  const handleBackClicked = () => {\n    if (!formSchema || currentPage <= 0) {\n      // TODO handle error here, button shouldnt be displayed too\n      return;\n    }\n\n    setCurrentPage(currentPage - 1);\n  };\n\n  const handleContinueClicked = () => {\n    if (!formSchema || currentPage >= propertyKeys.length - 1) {\n      // TODO handle error here, button shouldnt be displayed too\n      return;\n    }\n\n    setCurrentPage(currentPage + 1);\n  };\n\n  const handleFormValueChange = (id: string, value: FormValue) => {\n    const newState = {\n      ...formData,\n      [id]: value,\n    };\n\n    setFormData(newState);\n  };\n\n  return (\n    <FormPage\n      title={formSchema.properties[currentPageId].title}\n      subtitle={formSchema.properties[currentPageId].subtitle}\n      onBackClicked={handleBackClicked}\n      onContinueClicked={handleContinueClicked}\n    >\n      <DynamicForm\n        id={currentPageId}\n        formPageSchema={formSchema.properties[currentPageId]}\n        value={formData[currentPageId]}\n        onFormValueChange={handleFormValueChange}\n      />\n    </FormPage>\n  );\n};\n\nexport default SiteSelectionForm;\n"],"names":["MultiSelect","options","values","onChange","length","handleChange","key","value","optionComponents","map","_jsx","className","children","_jsxs","type","class","checked","onClick","Input","step","min","max","InputBox","event","currentTarget","getInputType","formPageSchema","enum","InputType","DynamicForm","id","onFormValueChange","questionInputComponent","inputType","useMemo","handleFormValueChange","newValue","FormPage","title","subtitle","onBackClicked","onContinueClicked","SiteSelectionForm","filepath","data","formSchema","setFormSchema","useState","formData","setFormData","currentPage","setCurrentPage","useEffect","loadJson","then","propertyKeys","Object","keys","properties","currentPageId","handleBackClicked","handleContinueClicked","newState","SiteSelection"],"mappings":"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"}