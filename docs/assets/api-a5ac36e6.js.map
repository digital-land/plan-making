{"version":3,"file":"api-a5ac36e6.js","sources":["../../node_modules/ol/Feature.js","../../node_modules/ol/style/Fill.js","../../node_modules/ol/geom/flat/interpolate.js","../../node_modules/ol/geom/flat/length.js","../../node_modules/ol/geom/LineString.js","../../node_modules/ol/style/Stroke.js","../../node_modules/ol/style/Image.js","../../node_modules/ol/colorlike.js","../../node_modules/ol/style/RegularShape.js","../../node_modules/ol/style/Circle.js","../../node_modules/ol/style/Style.js","../../node_modules/ol/style/Text.js","../../node_modules/quickselect/index.js","../../node_modules/rbush/index.js","../../node_modules/ol/style/IconImage.js","../../node_modules/ol/style/Icon.js","../../node_modules/ol/style/flat.js","../../node_modules/ol/layer/BaseVector.js","../../node_modules/ol/render/canvas/Instruction.js","../../node_modules/ol/render/VectorContext.js","../../node_modules/ol/render/canvas/Builder.js","../../node_modules/ol/render/canvas/ImageBuilder.js","../../node_modules/ol/render/canvas/LineStringBuilder.js","../../node_modules/ol/render/canvas/PolygonBuilder.js","../../node_modules/ol/geom/flat/linechunk.js","../../node_modules/ol/geom/flat/straightchunk.js","../../node_modules/ol/render/canvas/TextBuilder.js","../../node_modules/ol/render/canvas/BuilderGroup.js","../../node_modules/ol/geom/flat/textpath.js","../../node_modules/ol/render/canvas/Executor.js","../../node_modules/ol/render/canvas/ExecutorGroup.js","../../node_modules/ol/render/canvas/Immediate.js","../../node_modules/ol/render/canvas/hitdetect.js","../../node_modules/ol/renderer/vector.js","../../node_modules/ol/renderer/canvas/VectorLayer.js","../../node_modules/ol/structs/RBush.js","../../node_modules/ol/source/VectorEventType.js","../../node_modules/ol/loadingstrategy.js","../../node_modules/ol/featureloader.js","../../node_modules/ol/source/Vector.js","../../node_modules/ol/geom/GeometryCollection.js","../../node_modules/ol/format/Feature.js","../../node_modules/ol/geom/MultiLineString.js","../../node_modules/ol/geom/MultiPoint.js","../../node_modules/ol/geom/flat/center.js","../../node_modules/ol/geom/MultiPolygon.js","../../node_modules/ol/format/TextFeature.js","../../node_modules/ol/format/WKT.js","../../src/api/api.ts"],"sourcesContent":["/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n    this.unlisten_ = listenImage(\n      this.image_,\n      this.handleImageLoad_.bind(this),\n      this.handleImageError_.bind(this)\n    );\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not.\n * The provided `imgSize` needs to match the actual size of the image.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    // `width` or `height` cannot be provided together with `scale`\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      69\n    );\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (\n          image instanceof HTMLCanvasElement ||\n          (image.src && image.complete)\n        ) {\n          width = image.width;\n          height = image.height;\n        } else {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height\n              )\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height)\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    const clone = new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    return clone;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/flat\n */\n\nimport Circle from '../style/Circle.js';\nimport Fill from './Fill.js';\nimport Icon from './Icon.js';\nimport RegularShape from './RegularShape.js';\nimport Stroke from './Stroke.js';\nimport Style from './Style.js';\nimport Text from './Text.js';\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [fill-color] The fill color.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [stroke-color] The stroke color.\n * @property {number} [stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [stroke-line-dash] Line dash pattern.\n * @property {number} [stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [stroke-miter-limit=10] Miter limit.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {string|Array<string>} [text-value] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `'text-placement': 'line'` or the immediate rendering API.\n * @property {string} [text-font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./Text.js\").TextPlacement} [text-placement='point'] Text placement.\n * @property {number} [text-repeat] Repeat interval in pixels. When set, the text will be repeated at this interval. Only available when\n * `text-placement` is set to `'line'`. Overrides `text-align`.\n * @property {number|import(\"../size.js\").Size} [text-scale] Scale.\n * @property {boolean} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {number} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {CanvasTextAlign} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `'text-placement': 'point'`. For `'text-placement': 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {import('./Text.js').TextJustify} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `'text-placement': 'line'`.\n * @property {CanvasTextBaseline} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {Array<number>} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-fill-color] The fill color. Specify `'none'` to avoid hit detection on the fill.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-stroke-line-dash] Line dash pattern.\n * @property {number} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-stroke-width] Stroke pixel width.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-background-stroke-line-dash] Line dash pattern.\n * @property {number} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-background-stroke-width] Stroke pixel width.\n */\n\n/**\n * Icon style properties applied to point features.  One of `icon-src` or `icon-img` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {HTMLImageElement|HTMLCanvasElement} [icon-img] Image object for the icon. If the `icon-src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `icon-img-size` option.\n * @property {import(\"../size.js\").Size} [icon-img-size] Image size in pixels. Only required if `icon-img` is set and `icon-src` is not.\n * The provided size needs to match the actual size of the image.\n * @property {Array<number>} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [icon-opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [icon-scale=1] Scale.\n * @property {number} [icon-width] Width of the icon. If not specified, the actual image width will be used. Cannot be combined\n * with `scale`.\n * @property {number} [icon-height] Height of the icon. If not specified, the actual image height will be used. Cannot be combined\n * with `scale`.\n * @property {number} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [icon-declutter-mode] Declutter mode\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-stroke-color] The stroke color.\n * @property {number} [shape-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [shape-stroke-line-dash] Line dash pattern.\n * @property {number} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [shape-radius2] Second radius of a star.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [shape-displacement=[0,0]] Displacement of the shape\n * @property {number} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius`, `shape-radius1` and `shape-radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [shape-declutter-mode] Declutter mode.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-stroke-color] The stroke color.\n * @property {number} [circle-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [circle-stroke-line-dash] Line dash pattern.\n * @property {number} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [circle-stroke-miter-limit=10] Miter limit.\n * @property {Array<number>} [circle-displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {number} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [circle-declutter-mode] Declutter mode\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @return {import(\"./Style.js\").default} A style instance.\n */\nexport function toStyle(flatStyle) {\n  const style = new Style({\n    fill: getFill(flatStyle, ''),\n    stroke: getStroke(flatStyle, ''),\n    text: getText(flatStyle),\n    image: getImage(flatStyle),\n  });\n\n  return style;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Fill|null|undefined} The fill (if any).\n */\nfunction getFill(flatStyle, prefix) {\n  const color = flatStyle[prefix + 'fill-color'];\n  if (!color) {\n    return;\n  }\n  if (color === 'none') {\n    return null;\n  }\n\n  return new Fill({color: color});\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Stroke|undefined} The stroke (if any).\n */\nfunction getStroke(flatStyle, prefix) {\n  const width = flatStyle[prefix + 'stroke-width'];\n  const color = flatStyle[prefix + 'stroke-color'];\n  if (!width && !color) {\n    return;\n  }\n\n  return new Stroke({\n    width: width,\n    color: color,\n    lineCap: flatStyle[prefix + 'stroke-line-cap'],\n    lineJoin: flatStyle[prefix + 'stroke-line-join'],\n    lineDash: flatStyle[prefix + 'stroke-line-dash'],\n    lineDashOffset: flatStyle[prefix + 'stroke-line-dash-offset'],\n    miterLimit: flatStyle[prefix + 'stroke-miter-limit'],\n  });\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {Text|undefined} The text (if any).\n */\nfunction getText(flatStyle) {\n  const value = flatStyle['text-value'];\n  if (!value) {\n    return;\n  }\n\n  const text = new Text({\n    text: value,\n    font: flatStyle['text-font'],\n    maxAngle: flatStyle['text-max-angle'],\n    offsetX: flatStyle['text-offset-x'],\n    offsetY: flatStyle['text-offset-y'],\n    overflow: flatStyle['text-overflow'],\n    placement: flatStyle['text-placement'],\n    repeat: flatStyle['text-repeat'],\n    scale: flatStyle['text-scale'],\n    rotateWithView: flatStyle['text-rotate-with-view'],\n    rotation: flatStyle['text-rotation'],\n    textAlign: flatStyle['text-align'],\n    justify: flatStyle['text-justify'],\n    textBaseline: flatStyle['text-baseline'],\n    padding: flatStyle['text-padding'],\n    fill: getFill(flatStyle, 'text-'),\n    backgroundFill: getFill(flatStyle, 'text-background-'),\n    stroke: getStroke(flatStyle, 'text-'),\n    backgroundStroke: getStroke(flatStyle, 'text-background-'),\n  });\n\n  return text;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {import(\"./Image.js\").default|undefined} The image (if any).\n */\nfunction getImage(flatStyle) {\n  const iconSrc = flatStyle['icon-src'];\n  const iconImg = flatStyle['icon-img'];\n  if (iconSrc || iconImg) {\n    const icon = new Icon({\n      src: iconSrc,\n      img: iconImg,\n      imgSize: flatStyle['icon-img-size'],\n      anchor: flatStyle['icon-anchor'],\n      anchorOrigin: flatStyle['icon-anchor-origin'],\n      anchorXUnits: flatStyle['icon-anchor-x-units'],\n      anchorYUnits: flatStyle['icon-anchor-y-units'],\n      color: flatStyle['icon-color'],\n      crossOrigin: flatStyle['icon-cross-origin'],\n      offset: flatStyle['icon-offset'],\n      displacement: flatStyle['icon-displacement'],\n      opacity: flatStyle['icon-opacity'],\n      scale: flatStyle['icon-scale'],\n      width: flatStyle['icon-width'],\n      height: flatStyle['icon-height'],\n      rotation: flatStyle['icon-rotation'],\n      rotateWithView: flatStyle['icon-rotate-with-view'],\n      size: flatStyle['icon-size'],\n      declutterMode: flatStyle['icon-declutter-mode'],\n    });\n    return icon;\n  }\n\n  const shapePoints = flatStyle['shape-points'];\n  if (shapePoints) {\n    const prefix = 'shape-';\n    const shape = new RegularShape({\n      points: shapePoints,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      radius: flatStyle['shape-radius'],\n      radius1: flatStyle['shape-radius1'],\n      radius2: flatStyle['shape-radius2'],\n      angle: flatStyle['shape-angle'],\n      displacement: flatStyle['shape-displacement'],\n      rotation: flatStyle['shape-rotation'],\n      rotateWithView: flatStyle['shape-rotate-with-view'],\n      scale: flatStyle['shape-scale'],\n      declutterMode: flatStyle['shape-declutter-mode'],\n    });\n\n    return shape;\n  }\n\n  const circleRadius = flatStyle['circle-radius'];\n  if (circleRadius) {\n    const prefix = 'circle-';\n    const circle = new Circle({\n      radius: circleRadius,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      displacement: flatStyle['circle-displacement'],\n      scale: flatStyle['circle-scale'],\n      rotation: flatStyle['circle-rotation'],\n      rotateWithView: flatStyle['circle-rotate-with-view'],\n      declutterMode: flatStyle['circle-declutter-mode'],\n    });\n\n    return circle;\n  }\n\n  return;\n}\n\n/**\n * @return {import('./flat.js').FlatStyle} The default flat style.\n */\nexport function createDefaultStyle() {\n  return {\n    'fill-color': 'rgba(255,255,255,0.4)',\n    'stroke-color': '#3399CC',\n    'stroke-width': 1.25,\n    'circle-radius': 5,\n    'circle-fill-color': 'rgba(255,255,255,0.4)',\n    'circle-stroke-width': 1.25,\n    'circle-stroke-color': '#3399CC',\n  };\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {toStyle} from '../style/flat.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleLike|null}\n     */\n    let styleLike;\n\n    if (style === undefined) {\n      styleLike = createDefaultStyle;\n    } else if (style === null) {\n      styleLike = null;\n    } else if (typeof style === 'function') {\n      styleLike = style;\n    } else if (style instanceof Style) {\n      styleLike = style;\n    } else if (Array.isArray(style)) {\n      const len = style.length;\n\n      /**\n       * @type {Array<Style>}\n       */\n      const styles = new Array(len);\n\n      for (let i = 0; i < len; ++i) {\n        const s = style[i];\n        if (s instanceof Style) {\n          styles[i] = s;\n        } else {\n          styles[i] = toStyle(s);\n        }\n      }\n      styleLike = styles;\n    } else {\n      styleLike = toStyle(style);\n    }\n\n    this.style_ = styleLike;\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    let render =\n      (replayGroup && !replayGroup.isEmpty()) ||\n      (declutterExecutorGroup && !declutterExecutorGroup.isEmpty());\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [geometries] Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries ? geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/Feature\n */\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      let thisLayout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          thisLayout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout = thisLayout;\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/format/TextFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nclass TextFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'text';\n  }\n\n  /**\n   * Read the feature from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromText(\n      getText(source),\n      this.adaptOptions(options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the features from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromText(\n      getText(source),\n      this.adaptOptions(options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the geometry from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromText(\n      getText(source),\n      this.adaptOptions(options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromText(getText(source));\n  }\n\n  /**\n   * @param {string} text Text.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjectionFromText(text) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as a string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return this.writeFeatureText(feature, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return this.writeFeaturesText(features, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return this.writeGeometryText(geometry, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n  if (typeof source === 'string') {\n    return source;\n  }\n  return '';\n}\n\nexport default TextFeature;\n","/**\n * @module ol/format/WKT\n */\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport TextFeature from './TextFeature.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * Geometry constructors\n * @enum {function (new:import(\"../geom/Geometry.js\").default, Array, import(\"../geom/Geometry.js\").GeometryLayout)}\n */\nconst GeometryConstructor = {\n  'POINT': Point,\n  'LINESTRING': LineString,\n  'POLYGON': Polygon,\n  'MULTIPOINT': MultiPoint,\n  'MULTILINESTRING': MultiLineString,\n  'MULTIPOLYGON': MultiPolygon,\n};\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [splitCollection=false] Whether to split GeometryCollections into\n * multiple features on reading.\n */\n\n/**\n * @typedef {Object} Token\n * @property {number} type Type.\n * @property {number|string} [value] Value.\n * @property {number} position Position.\n */\n\n/**\n * @const\n * @type {string}\n */\nconst EMPTY = 'EMPTY';\n\n/**\n * @const\n * @type {string}\n */\nconst Z = 'Z';\n\n/**\n * @const\n * @type {string}\n */\nconst M = 'M';\n\n/**\n * @const\n * @type {string}\n */\nconst ZM = 'ZM';\n\n/**\n * @const\n * @enum {number}\n */\nconst TokenType = {\n  START: 0,\n  TEXT: 1,\n  LEFT_PAREN: 2,\n  RIGHT_PAREN: 3,\n  NUMBER: 4,\n  COMMA: 5,\n  EOF: 6,\n};\n\n/**\n * @type {Object<import(\"../geom/Geometry.js\").Type, string>}\n */\nconst wktTypeLookup = {\n  Point: 'POINT',\n  LineString: 'LINESTRING',\n  Polygon: 'POLYGON',\n  MultiPoint: 'MULTIPOINT',\n  MultiLineString: 'MULTILINESTRING',\n  MultiPolygon: 'MULTIPOLYGON',\n  GeometryCollection: 'GEOMETRYCOLLECTION',\n  Circle: 'CIRCLE',\n};\n\n/**\n * Class to tokenize a WKT string.\n */\nclass Lexer {\n  /**\n   * @param {string} wkt WKT string.\n   */\n  constructor(wkt) {\n    /**\n     * @type {string}\n     */\n    this.wkt = wkt;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.index_ = -1;\n  }\n\n  /**\n   * @param {string} c Character.\n   * @return {boolean} Whether the character is alphabetic.\n   * @private\n   */\n  isAlpha_(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z');\n  }\n\n  /**\n   * @param {string} c Character.\n   * @param {boolean} [decimal] Whether the string number\n   *     contains a dot, i.e. is a decimal number.\n   * @return {boolean} Whether the character is numeric.\n   * @private\n   */\n  isNumeric_(c, decimal) {\n    decimal = decimal !== undefined ? decimal : false;\n    return (c >= '0' && c <= '9') || (c == '.' && !decimal);\n  }\n\n  /**\n   * @param {string} c Character.\n   * @return {boolean} Whether the character is whitespace.\n   * @private\n   */\n  isWhiteSpace_(c) {\n    return c == ' ' || c == '\\t' || c == '\\r' || c == '\\n';\n  }\n\n  /**\n   * @return {string} Next string character.\n   * @private\n   */\n  nextChar_() {\n    return this.wkt.charAt(++this.index_);\n  }\n\n  /**\n   * Fetch and return the next token.\n   * @return {Token} Next string token.\n   */\n  nextToken() {\n    const c = this.nextChar_();\n    const position = this.index_;\n    /** @type {number|string} */\n    let value = c;\n    let type;\n\n    if (c == '(') {\n      type = TokenType.LEFT_PAREN;\n    } else if (c == ',') {\n      type = TokenType.COMMA;\n    } else if (c == ')') {\n      type = TokenType.RIGHT_PAREN;\n    } else if (this.isNumeric_(c) || c == '-') {\n      type = TokenType.NUMBER;\n      value = this.readNumber_();\n    } else if (this.isAlpha_(c)) {\n      type = TokenType.TEXT;\n      value = this.readText_();\n    } else if (this.isWhiteSpace_(c)) {\n      return this.nextToken();\n    } else if (c === '') {\n      type = TokenType.EOF;\n    } else {\n      throw new Error('Unexpected character: ' + c);\n    }\n\n    return {position: position, value: value, type: type};\n  }\n\n  /**\n   * @return {number} Numeric token value.\n   * @private\n   */\n  readNumber_() {\n    let c;\n    const index = this.index_;\n    let decimal = false;\n    let scientificNotation = false;\n    do {\n      if (c == '.') {\n        decimal = true;\n      } else if (c == 'e' || c == 'E') {\n        scientificNotation = true;\n      }\n      c = this.nextChar_();\n    } while (\n      this.isNumeric_(c, decimal) ||\n      // if we haven't detected a scientific number before, 'e' or 'E'\n      // hint that we should continue to read\n      (!scientificNotation && (c == 'e' || c == 'E')) ||\n      // once we know that we have a scientific number, both '-' and '+'\n      // are allowed\n      (scientificNotation && (c == '-' || c == '+'))\n    );\n    return parseFloat(this.wkt.substring(index, this.index_--));\n  }\n\n  /**\n   * @return {string} String token value.\n   * @private\n   */\n  readText_() {\n    let c;\n    const index = this.index_;\n    do {\n      c = this.nextChar_();\n    } while (this.isAlpha_(c));\n    return this.wkt.substring(index, this.index_--).toUpperCase();\n  }\n}\n\n/**\n * Class to parse the tokens from the WKT string.\n */\nclass Parser {\n  /**\n   * @param {Lexer} lexer The lexer.\n   */\n  constructor(lexer) {\n    /**\n     * @type {Lexer}\n     * @private\n     */\n    this.lexer_ = lexer;\n\n    /**\n     * @type {Token}\n     * @private\n     */\n    this.token_ = {\n      position: 0,\n      type: TokenType.START,\n    };\n\n    /**\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     * @private\n     */\n    this.layout_ = 'XY';\n  }\n\n  /**\n   * Fetch the next token form the lexer and replace the active token.\n   * @private\n   */\n  consume_() {\n    this.token_ = this.lexer_.nextToken();\n  }\n\n  /**\n   * Tests if the given type matches the type of the current token.\n   * @param {TokenType} type Token type.\n   * @return {boolean} Whether the token matches the given type.\n   */\n  isTokenType(type) {\n    return this.token_.type == type;\n  }\n\n  /**\n   * If the given type matches the current token, consume it.\n   * @param {TokenType} type Token type.\n   * @return {boolean} Whether the token matches the given type.\n   */\n  match(type) {\n    const isMatch = this.isTokenType(type);\n    if (isMatch) {\n      this.consume_();\n    }\n    return isMatch;\n  }\n\n  /**\n   * Try to parse the tokens provided by the lexer.\n   * @return {import(\"../geom/Geometry.js\").default} The geometry.\n   */\n  parse() {\n    this.consume_();\n    return this.parseGeometry_();\n  }\n\n  /**\n   * Try to parse the dimensional info.\n   * @return {import(\"../geom/Geometry.js\").GeometryLayout} The layout.\n   * @private\n   */\n  parseGeometryLayout_() {\n    /** @type {import(\"../geom/Geometry.js\").GeometryLayout} */\n    let layout = 'XY';\n    const dimToken = this.token_;\n    if (this.isTokenType(TokenType.TEXT)) {\n      const dimInfo = dimToken.value;\n      if (dimInfo === Z) {\n        layout = 'XYZ';\n      } else if (dimInfo === M) {\n        layout = 'XYM';\n      } else if (dimInfo === ZM) {\n        layout = 'XYZM';\n      }\n      if (layout !== 'XY') {\n        this.consume_();\n      }\n    }\n    return layout;\n  }\n\n  /**\n   * @return {Array<import(\"../geom/Geometry.js\").default>} A collection of geometries.\n   * @private\n   */\n  parseGeometryCollectionText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const geometries = [];\n      do {\n        geometries.push(this.parseGeometry_());\n      } while (this.match(TokenType.COMMA));\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return geometries;\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<number>} All values in a point.\n   * @private\n   */\n  parsePointText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parsePoint_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<Array<number>>} All points in a linestring.\n   * @private\n   */\n  parseLineStringText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parsePointList_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<Array<Array<number>>>} All points in a polygon.\n   * @private\n   */\n  parsePolygonText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parseLineStringTextList_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<Array<number>>} All points in a multipoint.\n   * @private\n   */\n  parseMultiPointText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      let coordinates;\n      if (this.token_.type == TokenType.LEFT_PAREN) {\n        coordinates = this.parsePointTextList_();\n      } else {\n        coordinates = this.parsePointList_();\n      }\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<Array<Array<number>>>} All linestring points\n   *                                          in a multilinestring.\n   * @private\n   */\n  parseMultiLineStringText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parseLineStringTextList_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<Array<Array<Array<number>>>>} All polygon points in a multipolygon.\n   * @private\n   */\n  parseMultiPolygonText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parsePolygonTextList_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<number>} A point.\n   * @private\n   */\n  parsePoint_() {\n    const coordinates = [];\n    const dimensions = this.layout_.length;\n    for (let i = 0; i < dimensions; ++i) {\n      const token = this.token_;\n      if (this.match(TokenType.NUMBER)) {\n        coordinates.push(/** @type {number} */ (token.value));\n      } else {\n        break;\n      }\n    }\n    if (coordinates.length == dimensions) {\n      return coordinates;\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<Array<number>>} An array of points.\n   * @private\n   */\n  parsePointList_() {\n    const coordinates = [this.parsePoint_()];\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parsePoint_());\n    }\n    return coordinates;\n  }\n\n  /**\n   * @return {Array<Array<number>>} An array of points.\n   * @private\n   */\n  parsePointTextList_() {\n    const coordinates = [this.parsePointText_()];\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parsePointText_());\n    }\n    return coordinates;\n  }\n\n  /**\n   * @return {Array<Array<Array<number>>>} An array of points.\n   * @private\n   */\n  parseLineStringTextList_() {\n    const coordinates = [this.parseLineStringText_()];\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parseLineStringText_());\n    }\n    return coordinates;\n  }\n\n  /**\n   * @return {Array<Array<Array<Array<number>>>>} An array of points.\n   * @private\n   */\n  parsePolygonTextList_() {\n    const coordinates = [this.parsePolygonText_()];\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parsePolygonText_());\n    }\n    return coordinates;\n  }\n\n  /**\n   * @return {boolean} Whether the token implies an empty geometry.\n   * @private\n   */\n  isEmptyGeometry_() {\n    const isEmpty =\n      this.isTokenType(TokenType.TEXT) && this.token_.value == EMPTY;\n    if (isEmpty) {\n      this.consume_();\n    }\n    return isEmpty;\n  }\n\n  /**\n   * Create an error message for an unexpected token error.\n   * @return {string} Error message.\n   * @private\n   */\n  formatErrorMessage_() {\n    return (\n      'Unexpected `' +\n      this.token_.value +\n      '` at position ' +\n      this.token_.position +\n      ' in `' +\n      this.lexer_.wkt +\n      '`'\n    );\n  }\n\n  /**\n   * @return {import(\"../geom/Geometry.js\").default} The geometry.\n   * @private\n   */\n  parseGeometry_() {\n    const token = this.token_;\n    if (this.match(TokenType.TEXT)) {\n      const geomType = /** @type {string} */ (token.value);\n      this.layout_ = this.parseGeometryLayout_();\n      const isEmpty = this.isEmptyGeometry_();\n      if (geomType == 'GEOMETRYCOLLECTION') {\n        if (isEmpty) {\n          return new GeometryCollection([]);\n        }\n        const geometries = this.parseGeometryCollectionText_();\n        return new GeometryCollection(geometries);\n      }\n      const ctor = GeometryConstructor[geomType];\n      if (!ctor) {\n        throw new Error('Invalid geometry type: ' + geomType);\n      }\n\n      let coordinates;\n\n      if (isEmpty) {\n        if (geomType == 'POINT') {\n          coordinates = [NaN, NaN];\n        } else {\n          coordinates = [];\n        }\n      } else {\n        switch (geomType) {\n          case 'POINT': {\n            coordinates = this.parsePointText_();\n            break;\n          }\n          case 'LINESTRING': {\n            coordinates = this.parseLineStringText_();\n            break;\n          }\n          case 'POLYGON': {\n            coordinates = this.parsePolygonText_();\n            break;\n          }\n          case 'MULTIPOINT': {\n            coordinates = this.parseMultiPointText_();\n            break;\n          }\n          case 'MULTILINESTRING': {\n            coordinates = this.parseMultiLineStringText_();\n            break;\n          }\n          case 'MULTIPOLYGON': {\n            coordinates = this.parseMultiPolygonText_();\n            break;\n          }\n          default:\n            break;\n        }\n      }\n\n      return new ctor(coordinates, this.layout_);\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n}\n\n/**\n * @classdesc\n * Geometry format for reading and writing data in the `WellKnownText` (WKT)\n * format.\n *\n * @api\n */\nclass WKT extends TextFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * Split GeometryCollection into multiple features.\n     * @type {boolean}\n     * @private\n     */\n    this.splitCollection_ =\n      options.splitCollection !== undefined ? options.splitCollection : false;\n  }\n\n  /**\n   * Parse a WKT string.\n   * @param {string} wkt WKT string.\n   * @return {import(\"../geom/Geometry.js\").default}\n   *     The geometry created.\n   * @private\n   */\n  parse_(wkt) {\n    const lexer = new Lexer(wkt);\n    const parser = new Parser(lexer);\n    return parser.parse();\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    const geom = this.readGeometryFromText(text, options);\n    const feature = new Feature();\n    feature.setGeometry(geom);\n    return feature;\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    let geometries = [];\n    const geometry = this.readGeometryFromText(text, options);\n    if (this.splitCollection_ && geometry.getType() == 'GeometryCollection') {\n      geometries = /** @type {GeometryCollection} */ (\n        geometry\n      ).getGeometriesArray();\n    } else {\n      geometries = [geometry];\n    }\n    const features = [];\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const feature = new Feature();\n      feature.setGeometry(geometries[i]);\n      features.push(feature);\n    }\n    return features;\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, options) {\n    const geometry = this.parse_(text);\n    return transformGeometryWithOptions(geometry, false, options);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, options) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, options);\n    }\n    return '';\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, options) {\n    if (features.length == 1) {\n      return this.writeFeatureText(features[0], options);\n    }\n    const geometries = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      geometries.push(features[i].getGeometry());\n    }\n    const collection = new GeometryCollection(geometries);\n    return this.writeGeometryText(collection, options);\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, options) {\n    return encode(transformGeometryWithOptions(geometry, true, options));\n  }\n}\n\n/**\n * @param {Point} geom Point geometry.\n * @return {string} Coordinates part of Point as WKT.\n */\nfunction encodePointGeometry(geom) {\n  const coordinates = geom.getCoordinates();\n  if (coordinates.length === 0) {\n    return '';\n  }\n  return coordinates.join(' ');\n}\n\n/**\n * @param {MultiPoint} geom MultiPoint geometry.\n * @return {string} Coordinates part of MultiPoint as WKT.\n */\nfunction encodeMultiPointGeometry(geom) {\n  const array = [];\n  const components = geom.getPoints();\n  for (let i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePointGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {GeometryCollection} geom GeometryCollection geometry.\n * @return {string} Coordinates part of GeometryCollection as WKT.\n */\nfunction encodeGeometryCollectionGeometry(geom) {\n  const array = [];\n  const geoms = geom.getGeometries();\n  for (let i = 0, ii = geoms.length; i < ii; ++i) {\n    array.push(encode(geoms[i]));\n  }\n  return array.join(',');\n}\n\n/**\n * @param {LineString|import(\"../geom/LinearRing.js\").default} geom LineString geometry.\n * @return {string} Coordinates part of LineString as WKT.\n */\nfunction encodeLineStringGeometry(geom) {\n  const coordinates = geom.getCoordinates();\n  const array = [];\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    array.push(coordinates[i].join(' '));\n  }\n  return array.join(',');\n}\n\n/**\n * @param {MultiLineString} geom MultiLineString geometry.\n * @return {string} Coordinates part of MultiLineString as WKT.\n */\nfunction encodeMultiLineStringGeometry(geom) {\n  const array = [];\n  const components = geom.getLineStrings();\n  for (let i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {Polygon} geom Polygon geometry.\n * @return {string} Coordinates part of Polygon as WKT.\n */\nfunction encodePolygonGeometry(geom) {\n  const array = [];\n  const rings = geom.getLinearRings();\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(rings[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {MultiPolygon} geom MultiPolygon geometry.\n * @return {string} Coordinates part of MultiPolygon as WKT.\n */\nfunction encodeMultiPolygonGeometry(geom) {\n  const array = [];\n  const components = geom.getPolygons();\n  for (let i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePolygonGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {import(\"../geom/SimpleGeometry.js\").default} geom SimpleGeometry geometry.\n * @return {string} Potential dimensional information for WKT type.\n */\nfunction encodeGeometryLayout(geom) {\n  const layout = geom.getLayout();\n  let dimInfo = '';\n  if (layout === 'XYZ' || layout === 'XYZM') {\n    dimInfo += Z;\n  }\n  if (layout === 'XYM' || layout === 'XYZM') {\n    dimInfo += M;\n  }\n  return dimInfo;\n}\n\n/**\n * @const\n * @type {Object<string, function(import(\"../geom/Geometry.js\").default): string>}\n */\nconst GeometryEncoder = {\n  'Point': encodePointGeometry,\n  'LineString': encodeLineStringGeometry,\n  'Polygon': encodePolygonGeometry,\n  'MultiPoint': encodeMultiPointGeometry,\n  'MultiLineString': encodeMultiLineStringGeometry,\n  'MultiPolygon': encodeMultiPolygonGeometry,\n  'GeometryCollection': encodeGeometryCollectionGeometry,\n};\n\n/**\n * Encode a geometry as WKT.\n * @param {import(\"../geom/Geometry.js\").default} geom The geometry to encode.\n * @return {string} WKT string for the geometry.\n */\nfunction encode(geom) {\n  const type = geom.getType();\n  const geometryEncoder = GeometryEncoder[type];\n  const enc = geometryEncoder(geom);\n  let wktType = wktTypeLookup[type];\n  if (typeof (/** @type {?} */ (geom).getFlatCoordinates) === 'function') {\n    const dimInfo = encodeGeometryLayout(\n      /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geom)\n    );\n    if (dimInfo.length > 0) {\n      wktType += ' ' + dimInfo;\n    }\n  }\n  if (enc.length === 0) {\n    return wktType + ' ' + EMPTY;\n  }\n  return wktType + '(' + enc + ')';\n}\n\nexport default WKT;\n","import { FeatureCollection } from \"geojson\";\nimport WKT from \"ol/format/WKT.js\";\nimport { Geometry } from \"ol/geom\";\nimport { DatasetResponse } from \"src/api/types\";\n\nconst baseURL = \"https://www.planning.data.gov.uk\";\n\nexport const fetchDataset = async (geometry: Geometry) => {\n  const format = new WKT();\n  const polygon = format.writeGeometry(geometry);\n\n  return await fetch(\n    `${baseURL}/entity.geojson?limit=100&geometry=${polygon}`,\n  ).then((Response) => {\n    return Response.json();\n  });\n};\n\nexport const fetchDatasetList: () => Promise<DatasetResponse> = async () =>\n  fetch(`${baseURL}/dataset.json`).then((response) => response.json());\n\nexport const fetchEntities: (\n  dataset: string,\n  geometry: Geometry,\n) => Promise<FeatureCollection> = async (dataset, geometry) => {\n  const format = new WKT();\n  const polygon = format.writeGeometry(geometry);\n\n  return await fetch(\n    `${baseURL}/entity.geojson?limit=100&geometry=${polygon}&dataset=${dataset}`,\n  ).then((Response) => {\n    return Response.json();\n  });\n};\n"],"names":["Feature","BaseObject","geometryOrProperties","geometry","properties","clone","style","unlistenByKey","listen","EventType","createStyleFunction","id","name","obj","styles","assert","Feature$1","Fill","options","color","Fill$1","interpolatePoint","flatCoordinates","offset","end","stride","fraction","dest","dimension","t","n","x1","y1","length","cumulativeLengths","i","x2","y2","target","index","binarySearch","lerp","lineStringCoordinateAtM","m","extrapolate","coordinate","lo","hi","mid","m0","m1","lineStringsCoordinateAtM","ends","interpolate","ii","lineStringLength","LineString","SimpleGeometry","coordinates","layout","extend","lineString","x","y","closestPoint","minSquaredDistance","closestSquaredDistanceXY","maxSquaredDelta","assignClosestPoint","callback","forEachSegment","inflateCoordinates","squaredTolerance","simplifiedFlatCoordinates","douglasPeucker","extent","intersectsLineString","deflateCoordinates","LineString$1","Stroke","lineCap","lineDash","lineDashOffset","lineJoin","miterLimit","width","Stroke$1","ImageStyle","toSize","scale","abstract","pixelRatio","displacement","opacity","rotateWithView","rotation","listener","ImageStyle$1","asColorLike","toString","RegularShape","size","fill","image","renderOptions","context","createCanvasContext2D","ImageState","stroke","strokeWidth","r1","r2","tmp","points","alpha","a","b","d","e","miterRatio","k","l","bevelAdd","aa","bb","dd","innerMiterRatio","innerLength","defaultLineJoin","strokeStyle","defaultStrokeStyle","defaultLineWidth","defaultMiterLimit","add","maxRadius","defaultFillStyle","asArray","radius","radius2","startAngle","step","angle0","radiusC","RegularShape$1","CircleStyle","Circle","Style","defaultGeometryFunction","renderer","text","feature","zIndex","toFunction","styleFunction","defaultStyles","createDefaultStyle","resolution","createEditingStyle","white","blue","Style$1","DEFAULT_FILL_COLOR","Text","overflow","font","maxAngle","offsetX","offsetY","placement","repeat","textAlign","justify","textBaseline","padding","Text$1","quickselect","arr","left","right","compare","quickselectStep","defaultCompare","z","s","sd","newLeft","newRight","j","swap","RBush$2","maxEntries","bbox","node","result","intersects","toBBox","nodesToSearch","child","childBBox","contains","data","tmpNode","item","createNode","equalsFn","path","indexes","parent","goingUp","findItem","items","height","N","M","calcBBox","N2","N1","multiSelect","right2","right3","level","minArea","minEnlargement","targetNode","area","bboxArea","enlargement","enlargedArea","isNode","insertPath","splitIndex","newNode","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareMinX","compareNodeMinX","compareMinY","compareNodeMinY","xMargin","yMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","p","destNode","minX","minY","maxX","maxY","children","stack","taintedTestContext","IconImage","EventTarget","src","crossOrigin","imageState","listenImage","canvas","ctx","asString","get","iconImage","iconImageCache","calculateScale","wantedWidth","wantedHeight","Icon","getUid","getIconImage","onload","imageSize","anchor","iconImageSize","Icon$1","toStyle","flatStyle","getFill","getStroke","getText","getImage","prefix","value","iconSrc","iconImg","shapePoints","circleRadius","Property","BaseVectorLayer","Layer","baseOptions","pixel","frameState","RBush","renderOrder","styleLike","len","toStyleFunction","BaseVectorLayer$1","Instruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","CanvasInstruction","VectorContext","hitDetectionRenderer","circleGeometry","geometryCollectionGeometry","lineStringGeometry","multiLineStringGeometry","multiPointGeometry","multiPolygonGeometry","pointGeometry","polygonGeometry","fillStyle","imageStyle","declutterImageWithText","textStyle","VectorContext$1","CanvasBuilder","tolerance","maxExtent","dashArray","dash","tmpCoord","myEnd","containsCoordinate","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","skipped","lastRel","nextRel","coordinateRelationship","Relationship","builderEnds","builderEnd","type","builderBegin","builderEndss","endss","myEnds","inflateMultiCoordinatesArray","inflateCoordinatesArray","hitDetectionInstructions","instruction","begin","reverseSubArray","state","fillStyleColor","strokeStyleColor","strokeStyleLineCap","defaultLineCap","strokeStyleLineDash","defaultLineDash","strokeStyleLineDashOffset","defaultLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","lineWidth","equals","endGeometryInstruction","buffer","Builder","CanvasImageBuilder","myBegin","sharedData","origin","ImageBuilder","CanvasLineStringBuilder","moveToLineToInstruction","LineStringBuilder","CanvasPolygonBuilder","numEnds","circleInstruction","snap","PolygonBuilder","lineChunk","chunkLength","chunks","cursor","chunkM","currentChunk","segmentLength","missing","matchingChunk","chunkStart","chunkEnd","start","acos","m12","m23","x12","y12","x23","y23","TEXT_ALIGN","CanvasTextBuilder","instructions","fillState","strokeState","textState","geometryType","flatOffset","o","oo","c","cc","chunk","chunkBegin","range","geometryWidths","interiorPoints","beg","w","keep","defaultPadding","p0","p1","p2","p3","currentFillStyle","strokeKey","textKey","defaultTextAlign","defaultTextBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","defaultFont","registerFont","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","BATCH_CONSTRUCTORS","TextBuilder","BuilderGroup","builderInstructions","zKey","builders","builderKey","builderInstruction","builderType","zIndexKey","replays","replay","Constructor","CanvasBuilderGroup","drawTextOnPath","startM","measureAndCacheTextWidth","cache","segmentM","advance","beginX","beginY","startOffset","startLength","endM","endX","endY","reverse","flat","rotate","PI","singleSegment","previousAngle","angle","delta","iStart","charLength","chars","tmpExtent","createEmpty","p4","getDeclutterBox","replayImageOrLabelArgs","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","Executor","overlaps","createTransform","key","textIsArray","widths","heights","lineWidths","getTextDimensions","renderWidth","contextInstructions","h","label","leftRight","strokeInstructions","fillInstructions","lineHeight","lineOffset","widthHeightIndex","lineWidthIndex","previousFont","fillStrokeArgs","sheetWidth","sheetHeight","centerX","centerY","anchorX","anchorY","originX","originY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","transform","composeTransform","applyTransform","createOrUpdate","contextScale","imageOrLabel","dimensions","box","strokePadding","drawImageOrLabel","repeatSize","featureCallback","hitExtent","declutterTree","pixelCoordinates","transform2D","transformSetFromArray","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","dx","dy","r","fn","coords","declutterMode","labelWithAnchor","backgroundFill","backgroundStroke","widthIndex","args","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","part","Executor$1","ORDER","ExecutorGroup","allInstructions","renderBuffer","flatClipCoords","executors","instructionByZindex","candidates","hitTolerance","declutteredFeatures","contextSize","newContext","extendCoordinate","getPixelIndexArray","imageData","idx","zs","ascending","executor","isEmpty","builderTypes","jj","circlePixelIndexArrayCache","maxDistanceSq","distances","distanceSq","distance","pixelIndex","ExecutorGroup$1","CanvasImmediateRenderer","userTransform","toFixed","localTransform","close","transformGeom2D","geometries","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","CanvasImmediateRenderer$1","HIT_DETECT_RESOLUTION","createHitDetectionImageData","transforms","features","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","imgSize","imgContext","img","byGeometryType","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","clamp","g","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","builderGroup","declutterBuilderGroup","circleReplay","textReplay","renderFeature","replayGroup","loading","renderFeatureInternal","simplifiedGeometry","renderGeometry","geometryRenderer","lineStringReplay","polygonReplay","imageBuilderGroup","imageReplay","textBuilderGroup","CanvasVectorLayerRenderer","CanvasLayerRenderer","vectorLayer","executorGroup","viewState","center","projection","projectionExtent","vectorSource","viewHints","ViewHint","multiWorld","worldWidth","getWidth","endWorld","world","compositionContext","canvasPool","releaseCanvas","layerState","makeScale","makeInverse","canvasTransform","transformToString","declutterExecutorGroup","render","RenderEventType","clipped","layerExtent","fromUserExtent","intersectsExtent","containsExtent","resolve","apply","layer","source","startX","matches","match","executorGroups","event","animating","interacting","updateWhileAnimating","updateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","renderedExtent","loadExtents","gutter","wrapCoordinateX","loadExtent","wrapExtentX","getRenderTolerance","userProjection","getUserProjection","userExtent","toUserExtent","toUserResolution","getTransformFromProjections","getSquaredRenderTolerance","ready","dirty","replayGroupInstructions","CanvasVectorLayerRenderer$1","RBush_","extents","values","uid","rbush","RBush$1","VectorEventType","all","withCredentials","loadFeaturesXhr","url","format","success","failure","xhr","dataProjection","VOID","VectorSourceEvent","Event","VectorSource","Source","allStrategy","useSpatialIndex","collection","Collection","featureKey","ObjectEventType","valid","newFeatures","geometryFeatures","modifyingCollection","evt","CollectionEventType","fast","featureId","removeAndIgnoreReturn","clearEvent","wrapAndSliceX","anExtent","filter","closestFeature","TRUE","previousMinSquaredDistance","minDistance","sid","loadedExtentsRtree","extentsToLoad","extentToLoad","object","featureChangeKeys","removed","loader","VectorSource$1","GeometryCollection","Geometry","geometryCollection","createOrUpdateEmpty","cloneGeometries","geometriesArray","simplifiedGeometries","simplified","simplifiedGeometryCollection","sx","sy","getCenter","transformFn","deltaX","deltaY","clonedGeometries","GeometryCollection$1","FeatureFormat","getProjection","transformGeometryWithOptions","write","featureProjection","transformed","equivalentProjection","power","MultiLineString","lineStrings","multiLineString","arrayMaxSquaredDelta","assignClosestArrayPoint","midpoints","midpoint","simplifiedEnds","douglasPeuckerArray","intersectsLineStringArray","deflateCoordinatesArray","MultiLineString$1","MultiPoint","point","multiPoint","squaredDistance","squaredDx","Point","containsXY","MultiPoint$1","linearRingss","flatCenters","createOrUpdateFromFlatCoordinates","MultiPolygon","thisLayout","polygons","thisEndss","polygon","newEndss","multiPolygon","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingssArea","orientLinearRingsArray","linearRingssCenter","getInteriorPointsOfMultiArray","linearRingssAreOriented","simplifiedEndss","quantizeMultiArray","prevEnds","Polygon","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","MultiPolygon$1","TextFeature","TextFeature$1","GeometryConstructor","EMPTY","Z","ZM","TokenType","wktTypeLookup","Lexer","wkt","decimal","position","scientificNotation","Parser","lexer","isMatch","dimToken","dimInfo","token","geomType","ctor","WKT","geom","encode","encodePointGeometry","encodeMultiPointGeometry","array","components","encodeGeometryCollectionGeometry","geoms","encodeLineStringGeometry","encodeMultiLineStringGeometry","encodePolygonGeometry","rings","encodeMultiPolygonGeometry","encodeGeometryLayout","GeometryEncoder","geometryEncoder","enc","wktType","WKT$1","baseURL","fetchDataset","writeGeometry","fetch","then","Response","json","fetchDatasetList","response","fetchEntities","dataset"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47]}