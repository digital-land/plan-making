import{T as Q,E as W,a as h,I as p,C as X,g as Z,f as $,V as v,i as q,b as S,c as ee,d as T,e as N,h as A,m as te,t as re,j as ne,k as oe,F as ie,l as C,n as se,o as ae,p as ce,q as Y,G as le,P as ue,L as de,r as ge,s as he,u as me,v as pe,w as ye,x as fe,y as xe,R as we,z as Fe,A as Re,D as Pe,S as Oe,H as Ge,J as _e,B as Ce,M as be}from"./mapContainer-639ecea4.js";import"./compat.module-775fbf94.js";import{_ as Ie,p as ve}from"./hooks.module-92d23998.js";import{o as M}from"./jsxRuntime.module-c0cd5f4d.js";import"./preact.module-d1801ce4.js";class je extends Q{constructor(e,t,n,o){super(),this.extent=e,this.pixelRatio_=n,this.resolution=t,this.state=o}changed(){this.dispatchEvent(W.CHANGE)}getExtent(){return this.extent}getImage(){return h()}getPixelRatio(){return this.pixelRatio_}getResolution(){return this.resolution}getState(){return this.state}load(){h()}}const Le=je;class Ee extends Le{constructor(e,t,n,o,i){const s=i!==void 0?p.IDLE:p.LOADED;super(e,t,n,s),this.loader_=i!==void 0?i:null,this.canvas_=o,this.error_=null}getError(){return this.error_}handleLoad_(e){e?(this.error_=e,this.state=p.ERROR):this.state=p.LOADED,this.changed()}load(){this.state==p.IDLE&&(this.state=p.LOADING,this.changed(),this.loader_(this.handleLoad_.bind(this)))}getImage(){return this.canvas_}}const Me=Ee;class Se extends X{constructor(e){super(e),this.image_=null}getImage(){return this.image_?this.image_.getImage():null}prepareFrame(e){const t=e.layerStatesArray[e.layerIndex],n=e.pixelRatio,o=e.viewState,i=o.resolution,s=this.getLayer().getSource(),a=e.viewHints;let c=e.extent;if(t.extent!==void 0&&(c=Z(c,$(t.extent,o.projection))),!a[v.ANIMATING]&&!a[v.INTERACTING]&&!q(c))if(s){const l=o.projection,d=s.getImage(c,i,n,l);d&&(this.loadImage(d)?this.image_=d:d.getState()===p.EMPTY&&(this.image_=null))}else this.image_=null;return!!this.image_}getData(e){const t=this.frameState;if(!t)return null;const n=this.getLayer(),o=S(t.pixelToCoordinateTransform,e.slice()),i=n.getExtent();if(i&&!ee(i,o))return null;const s=this.image_.getExtent(),a=this.getImage(),c=T(s),l=Math.floor(a.width*((o[0]-s[0])/c));if(l<0||l>=a.width)return null;const d=N(s),y=Math.floor(a.height*((s[3]-o[1])/d));return y<0||y>=a.height?null:this.getImageData(a,l,y)}renderFrame(e,t){const n=this.image_,o=n.getExtent(),i=n.getResolution(),s=n.getPixelRatio(),a=e.layerStatesArray[e.layerIndex],c=e.pixelRatio,l=e.viewState,d=l.center,y=l.resolution,G=c*i/(y*s),w=e.extent,R=l.resolution,m=l.rotation,g=Math.round(T(w)/R*c),f=Math.round(N(w)/R*c);A(this.pixelTransform,e.size[0]/2,e.size[1]/2,1/c,1/c,m,-g/2,-f/2),te(this.inversePixelTransform,this.pixelTransform);const x=re(this.pixelTransform);this.useContainer(t,x,this.getBackground(e));const u=this.context,F=u.canvas;F.width!=g||F.height!=f?(F.width=g,F.height=f):this.containerReused||u.clearRect(0,0,g,f);let j=!1,L=!0;if(a.extent){const O=$(a.extent,l.projection);L=ne(O,e.extent),j=L&&!oe(O,e.extent),j&&this.clipUnrotated(u,e,O)}const P=this.getImage(),_=A(this.tempTransform,g/2,f/2,G,G,0,s*(o[0]-d[0])/i,s*(d[1]-o[3])/i);this.renderedResolution=i*c/s;const J=P.width*_[0],V=P.height*_[3];if(this.getLayer().getSource().getInterpolate()||(u.imageSmoothingEnabled=!1),this.preRender(u,e),L&&J>=.5&&V>=.5){const O=_[4],K=_[5],E=a.opacity;let H;E!==1&&(H=u.globalAlpha,u.globalAlpha=E),u.drawImage(P,0,0,+P.width,+P.height,O,K,J,V),E!==1&&(u.globalAlpha=H)}return this.postRender(u,e),j&&u.restore(),u.imageSmoothingEnabled=!0,x!==F.style.transform&&(F.style.transform=x),this.container}}const Te=Se;class Ne extends ie{constructor(){super()}getType(){return"json"}readFeature(e,t){return this.readFeatureFromObject(b(e),this.getReadOptions(e,t))}readFeatures(e,t){return this.readFeaturesFromObject(b(e),this.getReadOptions(e,t))}readFeatureFromObject(e,t){return h()}readFeaturesFromObject(e,t){return h()}readGeometry(e,t){return this.readGeometryFromObject(b(e),this.getReadOptions(e,t))}readGeometryFromObject(e,t){return h()}readProjection(e){return this.readProjectionFromObject(b(e))}readProjectionFromObject(e){return h()}writeFeature(e,t){return JSON.stringify(this.writeFeatureObject(e,t))}writeFeatureObject(e,t){return h()}writeFeatures(e,t){return JSON.stringify(this.writeFeaturesObject(e,t))}writeFeaturesObject(e,t){return h()}writeGeometry(e,t){return JSON.stringify(this.writeGeometryObject(e,t))}writeGeometryObject(e,t){return h()}}function b(r){if(typeof r=="string"){const e=JSON.parse(r);return e||null}return r!==null?r:null}const Ae=Ne;class ke extends Ae{constructor(e){e=e||{},super(),this.dataProjection=C(e.dataProjection?e.dataProjection:"EPSG:4326"),e.featureProjection&&(this.defaultFeatureProjection=C(e.featureProjection)),this.geometryName_=e.geometryName,this.extractGeometryName_=e.extractGeometryName,this.supportedMediaTypes=["application/geo+json","application/vnd.geo+json"]}readFeatureFromObject(e,t){let n=null;e.type==="Feature"?n=e:n={type:"Feature",geometry:e,properties:null};const o=k(n.geometry,t),i=new se;return this.geometryName_?i.setGeometryName(this.geometryName_):this.extractGeometryName_&&"geometry_name"in n!==void 0&&i.setGeometryName(n.geometry_name),i.setGeometry(o),"id"in n&&i.setId(n.id),n.properties&&i.setProperties(n.properties,!0),i}readFeaturesFromObject(e,t){const n=e;let o=null;if(n.type==="FeatureCollection"){const i=e;o=[];const s=i.features;for(let a=0,c=s.length;a<c;++a)o.push(this.readFeatureFromObject(s[a],t))}else o=[this.readFeatureFromObject(e,t)];return o}readGeometryFromObject(e,t){return k(e,t)}readProjectionFromObject(e){const t=e.crs;let n;return t?t.type=="name"?n=C(t.properties.name):t.type==="EPSG"?n=C("EPSG:"+t.properties.code):ae(!1,36):n=this.dataProjection,n}writeFeatureObject(e,t){t=this.adaptOptions(t);const n={type:"Feature",geometry:null,properties:null},o=e.getId();if(o!==void 0&&(n.id=o),!e.hasProperties())return n;const i=e.getProperties(),s=e.getGeometry();return s&&(n.geometry=D(s,t),delete i[e.getGeometryName()]),ce(i)||(n.properties=i),n}writeFeaturesObject(e,t){t=this.adaptOptions(t);const n=[];for(let o=0,i=e.length;o<i;++o)n.push(this.writeFeatureObject(e[o],t));return{type:"FeatureCollection",features:n}}writeGeometryObject(e,t){return D(e,this.adaptOptions(t))}}function k(r,e){if(!r)return null;let t;switch(r.type){case"Point":{t=Je(r);break}case"LineString":{t=Ve(r);break}case"Polygon":{t=ze(r);break}case"MultiPoint":{t=$e(r);break}case"MultiLineString":{t=He(r);break}case"MultiPolygon":{t=Be(r);break}case"GeometryCollection":{t=De(r);break}default:throw new Error("Unsupported GeoJSON type: "+r.type)}return Y(t,!1,e)}function De(r,e){const t=r.geometries.map(function(n){return k(n,e)});return new le(t)}function Je(r){return new ue(r.coordinates)}function Ve(r){return new de(r.coordinates)}function He(r){return new ge(r.coordinates)}function $e(r){return new he(r.coordinates)}function Be(r){return new me(r.coordinates)}function ze(r){return new pe(r.coordinates)}function D(r,e){r=Y(r,!0,e);const t=r.getType();let n;switch(t){case"Point":{n=Qe(r);break}case"LineString":{n=We(r);break}case"Polygon":{n=Xe(r,e);break}case"MultiPoint":{n=Ye(r);break}case"MultiLineString":{n=qe(r);break}case"MultiPolygon":{n=Ke(r,e);break}case"GeometryCollection":{n=Ue(r,e);break}case"Circle":{n={type:"GeometryCollection",geometries:[]};break}default:throw new Error("Unsupported geometry type: "+t)}return n}function Ue(r,e){return e=Object.assign({},e),delete e.featureProjection,{type:"GeometryCollection",geometries:r.getGeometriesArray().map(function(n){return D(n,e)})}}function We(r,e){return{type:"LineString",coordinates:r.getCoordinates()}}function qe(r,e){return{type:"MultiLineString",coordinates:r.getCoordinates()}}function Ye(r,e){return{type:"MultiPoint",coordinates:r.getCoordinates()}}function Ke(r,e){let t;return e&&(t=e.rightHanded),{type:"MultiPolygon",coordinates:r.getCoordinates(t)}}function Qe(r,e){return{type:"Point",coordinates:r.getCoordinates()}}function Xe(r,e){let t;return e&&(t=e.rightHanded),{type:"Polygon",coordinates:r.getCoordinates(t)}}const Ze=ke;class et extends Te{constructor(e){super(e),this.vectorRenderer_=new ye(e),this.layerImageRatio_=e.getImageRatio(),this.coordinateToVectorPixelTransform_=fe(),this.renderedPixelToCoordinateTransform_=null}disposeInternal(){this.vectorRenderer_.dispose(),super.disposeInternal()}getFeatures(e){if(!this.vectorRenderer_)return Promise.resolve([]);const t=S(this.coordinateToVectorPixelTransform_,S(this.renderedPixelToCoordinateTransform_,e.slice()));return this.vectorRenderer_.getFeatures(t)}handleFontsChanged(){this.vectorRenderer_.handleFontsChanged()}prepareFrame(e){const t=e.pixelRatio,n=e.viewState,o=n.resolution,i=e.viewHints,s=this.vectorRenderer_;let a=e.extent;this.layerImageRatio_!==1&&(a=a.slice(0),xe(a,this.layerImageRatio_));const c=T(a)/o,l=N(a)/o;if(!i[v.ANIMATING]&&!i[v.INTERACTING]&&!q(a)){s.useContainer(null,null);const d=s.context,y=e.layerStatesArray[e.layerIndex],G=Object.assign({},y,{opacity:1}),w=Object.assign({},e,{declutterTree:new we(9),extent:a,size:[c,l],viewState:Object.assign({},e.viewState,{rotation:0}),layerStatesArray:[G],layerIndex:0});let R=!0;const m=new Me(a,o,t,d.canvas,function(g){s.prepareFrame(w)&&s.replayGroupChanged&&(s.clipping=!1,s.renderFrame(w,null)&&(s.renderDeclutter(w),R=!1),g())});m.addEventListener(W.CHANGE,()=>{if(m.getState()!==p.LOADED)return;this.image_=R?null:m;const g=m.getResolution(),f=m.getPixelRatio(),x=g*t/f;this.renderedResolution=x,this.coordinateToVectorPixelTransform_=A(this.coordinateToVectorPixelTransform_,c/2,l/2,1/x,-1/x,0,-n.center[0],-n.center[1])}),m.load()}return this.image_&&(this.renderedPixelToCoordinateTransform_=e.pixelToCoordinateTransform.slice()),!!this.image_}preRender(){}postRender(){}renderDeclutter(){}forEachFeatureAtCoordinate(e,t,n,o,i){return this.vectorRenderer_?this.vectorRenderer_.forEachFeatureAtCoordinate(e,t,n,o,i):super.forEachFeatureAtCoordinate(e,t,n,o,i)}}const tt=et;class rt extends Fe{constructor(e){e=e||{};const t=Object.assign({},e);delete t.imageRatio,super(t),this.imageRatio_=e.imageRatio!==void 0?e.imageRatio:1}getImageRatio(){return this.imageRatio_}createRenderer(){return new tt(this)}}const nt=rt,ot=({features:r,stroke:e,fill:t})=>{const n=Re(),o=Ie(null);return ve(()=>{o.current&&(n.removeLayer(o.current),o.current=null);const i=new Pe({features:new Ze().readFeatures(r)});return o.current=new nt({source:i,style:new Oe({fill:new Ge(t),stroke:new _e(e)})}),n.addLayer(o.current),()=>{o.current&&(n==null||n.removeLayer(o.current))}},[r,n,o,e,t]),null},it=({features:r,stroke:e,fill:t})=>M(be,{children:[M(Ce,{lat:54.97,lng:-1.627,zoom:15.5,style:{height:"500px",width:"500px"}}),M(ot,{features:r,stroke:e,fill:t})]}),dt={component:it,title:"Components/Map/Map Layer",tags:["autodocs"]},I={args:{stroke:{color:"#003078",width:2},fill:{color:"rgba(0, 48, 120, 0.2)"},features:{type:"FeatureCollection",features:[{geometry:{type:"MultiPolygon",coordinates:[[[[-1.62581,54.969804],[-1.625196,54.96974],[-1.625058,54.970268],[-1.625068,54.970562],[-1.625283,54.970584],[-1.625293,54.970553],[-1.625331,54.97052],[-1.625371,54.9705],[-1.62542,54.970487],[-1.625592,54.970487],[-1.625627,54.970475],[-1.625663,54.970449],[-1.625809,54.969894],[-1.62581,54.969804]]],[[[-1.625786,54.971015],[-1.625776,54.971043],[-1.626438,54.971144],[-1.626601,54.970767],[-1.625944,54.97068],[-1.625793,54.971011],[-1.625786,54.971015]]],[[[-1.625186,54.971047],[-1.625334,54.971068],[-1.625378,54.970951],[-1.62579,54.97101],[-1.625942,54.97068],[-1.625378,54.970602],[-1.62534,54.97067],[-1.625186,54.971047]]],[[[-1.628544,54.970167],[-1.628629,54.969963],[-1.628349,54.969759],[-1.627934,54.969428],[-1.627838,54.969442],[-1.627826,54.969456],[-1.627803,54.969461],[-1.627765,54.969461],[-1.627703,54.969431],[-1.627298,54.969398],[-1.627255,54.969421],[-1.627216,54.969418],[-1.627205,54.969391],[-1.627141,54.969386],[-1.627048,54.969616],[-1.626742,54.969581],[-1.626693,54.969697],[-1.626407,54.969662],[-1.626421,54.969618],[-1.62593,54.96957],[-1.625878,54.969791],[-1.625945,54.969854],[-1.628482,54.970185],[-1.628544,54.970167]]],[[[-1.627112,54.970841],[-1.626924,54.971221],[-1.627029,54.971238],[-1.627015,54.971267],[-1.627088,54.971275],[-1.627097,54.971263],[-1.627085,54.97126],[-1.627099,54.971241],[-1.62713,54.971234],[-1.627715,54.971326],[-1.627899,54.970945],[-1.627478,54.97089],[-1.627112,54.970841]]],[[[-1.626846,54.971211],[-1.627022,54.970824],[-1.626604,54.970767],[-1.626424,54.971187],[-1.626578,54.971208],[-1.626585,54.971191],[-1.62674,54.971212],[-1.626748,54.971194],[-1.626846,54.971211]]],[[[-1.628261,54.970992],[-1.628273,54.970994],[-1.627903,54.970945],[-1.627677,54.97141],[-1.628319,54.971497],[-1.628473,54.9713],[-1.628487,54.971261],[-1.628502,54.971263],[-1.628584,54.971037],[-1.628274,54.970994],[-1.628573,54.971033],[-1.628862,54.971073],[-1.62911,54.970334],[-1.628635,54.970283],[-1.62845,54.970891],[-1.628302,54.970877],[-1.628261,54.970992]]]]},type:"Feature",properties:{}}]}}};var B,z,U;I.parameters={...I.parameters,docs:{...(B=I.parameters)==null?void 0:B.docs,source:{originalSource:`{
  args: {
    stroke: {
      color: "#003078",
      width: 2
    },
    fill: {
      color: "rgba(0, 48, 120, 0.2)"
    },
    features: {
      type: "FeatureCollection",
      features: [{
        geometry: {
          type: "MultiPolygon",
          coordinates: [[[[-1.62581, 54.969804], [-1.625196, 54.96974], [-1.625058, 54.970268], [-1.625068, 54.970562], [-1.625283, 54.970584], [-1.625293, 54.970553], [-1.625331, 54.97052], [-1.625371, 54.9705], [-1.62542, 54.970487], [-1.625592, 54.970487], [-1.625627, 54.970475], [-1.625663, 54.970449], [-1.625809, 54.969894], [-1.62581, 54.969804]]], [[[-1.625786, 54.971015], [-1.625776, 54.971043], [-1.626438, 54.971144], [-1.626601, 54.970767], [-1.625944, 54.97068], [-1.625793, 54.971011], [-1.625786, 54.971015]]], [[[-1.625186, 54.971047], [-1.625334, 54.971068], [-1.625378, 54.970951], [-1.62579, 54.97101], [-1.625942, 54.97068], [-1.625378, 54.970602], [-1.62534, 54.97067], [-1.625186, 54.971047]]], [[[-1.628544, 54.970167], [-1.628629, 54.969963], [-1.628349, 54.969759], [-1.627934, 54.969428], [-1.627838, 54.969442], [-1.627826, 54.969456], [-1.627803, 54.969461], [-1.627765, 54.969461], [-1.627703, 54.969431], [-1.627298, 54.969398], [-1.627255, 54.969421], [-1.627216, 54.969418], [-1.627205, 54.969391], [-1.627141, 54.969386], [-1.627048, 54.969616], [-1.626742, 54.969581], [-1.626693, 54.969697], [-1.626407, 54.969662], [-1.626421, 54.969618], [-1.62593, 54.96957], [-1.625878, 54.969791], [-1.625945, 54.969854], [-1.628482, 54.970185], [-1.628544, 54.970167]]], [[[-1.627112, 54.970841], [-1.626924, 54.971221], [-1.627029, 54.971238], [-1.627015, 54.971267], [-1.627088, 54.971275], [-1.627097, 54.971263], [-1.627085, 54.97126], [-1.627099, 54.971241], [-1.62713, 54.971234], [-1.627715, 54.971326], [-1.627899, 54.970945], [-1.627478, 54.97089], [-1.627112, 54.970841]]], [[[-1.626846, 54.971211], [-1.627022, 54.970824], [-1.626604, 54.970767], [-1.626424, 54.971187], [-1.626578, 54.971208], [-1.626585, 54.971191], [-1.62674, 54.971212], [-1.626748, 54.971194], [-1.626846, 54.971211]]], [[[-1.628261, 54.970992], [-1.628273, 54.970994], [-1.627903, 54.970945], [-1.627677, 54.97141], [-1.628319, 54.971497], [-1.628473, 54.9713], [-1.628487, 54.971261], [-1.628502, 54.971263], [-1.628584, 54.971037], [-1.628274, 54.970994], [-1.628573, 54.971033], [-1.628862, 54.971073], [-1.62911, 54.970334], [-1.628635, 54.970283], [-1.62845, 54.970891], [-1.628302, 54.970877], [-1.628261, 54.970992]]]]
        },
        type: "Feature",
        properties: {}
      }]
    }
  }
}`,...(U=(z=I.parameters)==null?void 0:z.docs)==null?void 0:U.source}}};const gt=["Default"];export{I as Default,gt as __namedExportsOrder,dt as default};
//# sourceMappingURL=MapLayer.stories-555cf08c.js.map
